import{mathjax as m}from"mathjax-full/js/mathjax.js";import{mathjax as V}from"mathjax-full/js/mathjax.js";import{TeX as s}from"mathjax-full/js/input/tex.js";import{TeX as b}from"mathjax-full/js/input/tex.js";import{CHTML as f}from"mathjax-full/js/output/chtml.js";import{CHTML as D}from"mathjax-full/js/output/chtml.js";import{SVG as u}from"mathjax-full/js/output/svg.js";import{SVG as U}from"mathjax-full/js/output/svg.js";import{createRequire as c}from"node:module";import{tex as x}from"@mdit/plugin-tex";import{AssistiveMmlHandler as l}from"mathjax-full/js/a11y/assistive-mml.js";import{liteAdaptor as d}from"mathjax-full/js/adaptors/liteAdaptor.js";import{RegisterHTMLHandler as h}from"mathjax-full/js/handlers/html.js";import{AllPackages as M}from"mathjax-full/js/input/tex/AllPackages.js";import j from"upath";const n=t=>({InputJax:new s({packages:M,...t.tex}),OutputJax:t.output==="chtml"?new f({fontURL:j.dirname(c(import.meta.url).resolve("mathjax-full/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff")),adaptiveCSS:!0,...t.chtml}):new u({fontCache:"none",...t.svg}),enableAssistiveMml:t.a11y!==!1}),v=(t={})=>{const e=n(t),o=d(),r=h(o);return t.a11y!==!1&&l(r),{adaptor:o,documentOptions:e}},H=({adaptor:t,documentOptions:e})=>t.innerHTML(e.OutputJax.styleSheet(m.document("",e))),L=(t,e)=>{const{adaptor:o,documentOptions:r}=e;t.use(x,{render:(a,p)=>{const i=m.document(a,r).convert(a,{display:p});return o.outerHTML(i)}})};export{D as CHTML,V as Mathjax,U as SVG,b as TeX,v as createMathjaxInstance,H as generateMathjaxStyle,n as getDocumentOptions,L as mathjax};
//# sourceMappingURL=index.mjs.map
