const n=JSON.parse('{"key":"v-309737ae","path":"/other/spring/5.html","title":"spring","lang":"zh-CN","frontmatter":{"title":"spring","icon":"page","order":51,"author":"xss","date":"2023-12-11T00:00:00.000Z","category":["spring"],"tag":["spring"],"footer":"这是测试显示的页脚","copyright":"无版权","description":"@Component public class Tokeninterceptor implements HandlerInterceptor { @Resource UserService userService; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token=request.getParameter(\\"token\\"); System.out.println(token); //token userid if(token == null){ throw new RuntimeException(\\"token null\\"); } String[] urll={\\"http://1\\",\\"http://2\\",\\"http://3\\",\\"http://4\\",\\"http://5\\",\\"http://6\\",\\"http://7\\",\\"http://8\\",\\"http://9\\",\\"http://0\\"}; int a= (int) (Math.random()*10); Tokenuser tokenuser=userService.getUserIdByToken(token); User user= userService.getUserByid(tokenuser.getUserid()); user.setAvatarUrl(urll[a]); UserContext.setCruuser(user); return true; } } @Configuration public class WebConfig implements WebMvcConfigurer { @Resource Tokeninterceptor tokeninterceptor; @Override public void addInterceptors(InterceptorRegistry registry) { InterceptorRegistration interceptor=registry.addInterceptor(tokeninterceptor); //\\"/api/user/createuser\\", // \\"/api/user/create\\", login // \\"/api/user/createuserp\\", zhuce // \\"/api/token/createtoken\\", // \\"/api/sms/createsms\\" duanxin interceptor.addPathPatterns(\\"/api/**\\") .excludePathPatterns(\\"/error\\",\\"/api/user/create\\",\\"/api/user/createuserp\\",\\"/api/sms/createsms\\",\\"/upload/file/**\\"); } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/other/spring/5.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"spring"}],["meta",{"property":"og:description","content":"@Component public class Tokeninterceptor implements HandlerInterceptor { @Resource UserService userService; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token=request.getParameter(\\"token\\"); System.out.println(token); //token userid if(token == null){ throw new RuntimeException(\\"token null\\"); } String[] urll={\\"http://1\\",\\"http://2\\",\\"http://3\\",\\"http://4\\",\\"http://5\\",\\"http://6\\",\\"http://7\\",\\"http://8\\",\\"http://9\\",\\"http://0\\"}; int a= (int) (Math.random()*10); Tokenuser tokenuser=userService.getUserIdByToken(token); User user= userService.getUserByid(tokenuser.getUserid()); user.setAvatarUrl(urll[a]); UserContext.setCruuser(user); return true; } } @Configuration public class WebConfig implements WebMvcConfigurer { @Resource Tokeninterceptor tokeninterceptor; @Override public void addInterceptors(InterceptorRegistry registry) { InterceptorRegistration interceptor=registry.addInterceptor(tokeninterceptor); //\\"/api/user/createuser\\", // \\"/api/user/create\\", login // \\"/api/user/createuserp\\", zhuce // \\"/api/token/createtoken\\", // \\"/api/sms/createsms\\" duanxin interceptor.addPathPatterns(\\"/api/**\\") .excludePathPatterns(\\"/error\\",\\"/api/user/create\\",\\"/api/user/createuserp\\",\\"/api/sms/createsms\\",\\"/upload/file/**\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"xss"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xss\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.23,"words":1568},"filePathRelative":"other/spring/5.md","localizedDate":"2023年12月11日","excerpt":"<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>\\n<span class=\\"token annotation punctuation\\">@Component</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Tokeninterceptor</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">HandlerInterceptor</span> <span class=\\"token punctuation\\">{</span>\\n\\n\\n    <span class=\\"token annotation punctuation\\">@Resource</span>\\n    <span class=\\"token class-name\\">UserService</span> userService<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">preHandle</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HttpServletRequest</span> request<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">HttpServletResponse</span> response<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span> handler<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n\\n        <span class=\\"token class-name\\">String</span> token<span class=\\"token operator\\">=</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParameter</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"token\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//token  userid</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>token <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">RuntimeException</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"token null\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> urll<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"http://1\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://2\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://3\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://4\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://5\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://6\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://7\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://8\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://9\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"http://0\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> a<span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">Tokenuser</span> tokenuser<span class=\\"token operator\\">=</span>userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getUserIdByToken</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">User</span> user<span class=\\"token operator\\">=</span> userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getUserByid</span><span class=\\"token punctuation\\">(</span>tokenuser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getUserid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        user<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setAvatarUrl</span><span class=\\"token punctuation\\">(</span>urll<span class=\\"token punctuation\\">[</span>a<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">UserContext</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setCruuser</span><span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n\\n\\n\\n\\n\\n<span class=\\"token annotation punctuation\\">@Configuration</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">WebConfig</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">WebMvcConfigurer</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Resource</span>\\n    <span class=\\"token class-name\\">Tokeninterceptor</span> tokeninterceptor<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">addInterceptors</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">InterceptorRegistry</span> registry<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n         <span class=\\"token class-name\\">InterceptorRegistration</span> interceptor<span class=\\"token operator\\">=</span>registry<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addInterceptor</span><span class=\\"token punctuation\\">(</span>tokeninterceptor<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n         <span class=\\"token comment\\">//\\"/api/user/createuser\\",</span>\\n        <span class=\\"token comment\\">// \\"/api/user/create\\",  login</span>\\n        <span class=\\"token comment\\">// \\"/api/user/createuserp\\",  zhuce</span>\\n        <span class=\\"token comment\\">// \\"/api/token/createtoken\\",</span>\\n        <span class=\\"token comment\\">// \\"/api/sms/createsms\\"   duanxin</span>\\n\\n         interceptor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addPathPatterns</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/api/**\\"</span><span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">excludePathPatterns</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/error\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"/api/user/create\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"/api/user/createuserp\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"/api/sms/createsms\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">\\"/upload/file/**\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
