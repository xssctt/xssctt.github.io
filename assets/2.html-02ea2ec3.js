const n=JSON.parse(`{"key":"v-da2f6d68","path":"/other/mysql/2.html","title":"数据库","lang":"zh-CN","frontmatter":{"title":"数据库","icon":"page","order":32,"author":"xss","date":"2023-12-11T00:00:00.000Z","category":["数据库"],"tag":["数据库","sql"],"footer":"这是测试显示的页脚","copyright":"无版权","description":"使用事务 2.1开始和提交事务 开始事务语句：begin 或者 start transaction 提交事务语句：commit 现有user表: id 用户id name\\t\\t用户名字 age\\t\\t\\t用户年龄 balance\\t\\t用户余额 +---------+-------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------+-------------+------+-----+---------+----------------+ | id | int | NO | PRI | NULL | auto_increment | | name | varchar(20) | YES | | NULL | | | age | int | YES | | NULL | | | balance | int | YES | | NULL | | +---------+-------------+------+-----+---------+----------------+ 下面是数据: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1500 | | 2 | 小红 | 21 | 2000 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 现在模拟银行转账的情况: 将小明的账户余额减少500块，将小红的余额增减500块。 START TRANSACTION; UPDATE user SET balance = balance - 500 WHERE name = '小明'; UPDATE user SET balance = balance + 500 WHERE name = '小红'; COMMIT; 事务执行后的结果: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 2.2rollback回滚 使用rollback关键字可以回到事务开始之前的状态。 如果你发现事务里逻辑有问题，可以回滚到事务之前的状态。 这可能比较抽象，看下面的例子，就会懂怎么用事务了。 当前表数据: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 现将小蓝的余额扣除300，小红的余额增加300。 但中途发现只需要将小蓝的余额扣除200就够了， 而且事务都执行了一半了，事务里的数据都改了，怎么办呢？ 这时回滚(rollback)就派上用场了。 START TRANSACTION; #操作 UPDATE user SET balance = balance - 300 WHERE name = '小蓝'; UPDATE user SET balance = balance + 300 WHERE name = '小红'; #查表 SELECT * FROM user; #发现问题，回滚 ROLLBACK; #再次查表 SELECT * FROM user; 结果: 回滚之前 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2800 | | 3 | 小蓝 | 22 | 1500 | +----+------+-----+---------+ 回滚之后 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 在回滚之后，数据又恢复原样了，之后可以再开启事务进行操作。 2.3savepoint保存点 其实，如果在事务里发现了逻辑错误的话，但是其中有一些逻辑是正确的呀， 直接回滚那不是麻烦了吗，又要重新开启一个事务，重新写一遍代码？？？😂 当然了，我们亲爱的MySQL设计者肯定不会这样做。 所以，在MySQL中，可以回到保存点时的状态而不用回滚事务。 MySQL中有savelpoint关键字来定义保存点。 语法如下: savepoint name; 1 比如定义一个名为point1的保存点: savepoint point1; 1 回滚到保存点的语法还不仅仅是直接rollback这么简单 下面时回滚到保存点的语法： rollback to savepoint 保存点名 1 比如: rollback to savepoint point1; 1 注意：保存点只在事务内使用 光说不练假把式，下面就是一个案例： #开启事务 START TRANSACTION; #修改数据 UPDATE user SET balance = balance - 300 WHERE name = '小蓝'; UPDATE user SET balance = balance + 300 WHERE name = '小红'; #设置保存点 SAVEPOINT my_point; #删除小蓝的数据 DELETE FROM user WHERE name = '小蓝'; #查表 SELECT * FROM user; #回滚到保存点时的状态 ROLLBACK TO SAVEPOINT my_point; #提交事务 COMMIT; #再次查表 SELECT * FROM user; 执行结果： 执行事务前 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 执行事务后 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2800 | | 3 | 小蓝 | 22 | 1500 | +----+------+-----+---------+ 可以看到小蓝的数据并没有被删除，因为回滚到了删除之前的状态。 总结： 在事务中设置保存点是个好习惯，可以让你的程序容错率更高。 特别是在进行删除数据这种危险的操作时，设置保存点是非常有必要的。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/other/mysql/2.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"数据库"}],["meta",{"property":"og:description","content":"使用事务 2.1开始和提交事务 开始事务语句：begin 或者 start transaction 提交事务语句：commit 现有user表: id 用户id name\\t\\t用户名字 age\\t\\t\\t用户年龄 balance\\t\\t用户余额 +---------+-------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------+-------------+------+-----+---------+----------------+ | id | int | NO | PRI | NULL | auto_increment | | name | varchar(20) | YES | | NULL | | | age | int | YES | | NULL | | | balance | int | YES | | NULL | | +---------+-------------+------+-----+---------+----------------+ 下面是数据: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1500 | | 2 | 小红 | 21 | 2000 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 现在模拟银行转账的情况: 将小明的账户余额减少500块，将小红的余额增减500块。 START TRANSACTION; UPDATE user SET balance = balance - 500 WHERE name = '小明'; UPDATE user SET balance = balance + 500 WHERE name = '小红'; COMMIT; 事务执行后的结果: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 2.2rollback回滚 使用rollback关键字可以回到事务开始之前的状态。 如果你发现事务里逻辑有问题，可以回滚到事务之前的状态。 这可能比较抽象，看下面的例子，就会懂怎么用事务了。 当前表数据: +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 现将小蓝的余额扣除300，小红的余额增加300。 但中途发现只需要将小蓝的余额扣除200就够了， 而且事务都执行了一半了，事务里的数据都改了，怎么办呢？ 这时回滚(rollback)就派上用场了。 START TRANSACTION; #操作 UPDATE user SET balance = balance - 300 WHERE name = '小蓝'; UPDATE user SET balance = balance + 300 WHERE name = '小红'; #查表 SELECT * FROM user; #发现问题，回滚 ROLLBACK; #再次查表 SELECT * FROM user; 结果: 回滚之前 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2800 | | 3 | 小蓝 | 22 | 1500 | +----+------+-----+---------+ 回滚之后 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 在回滚之后，数据又恢复原样了，之后可以再开启事务进行操作。 2.3savepoint保存点 其实，如果在事务里发现了逻辑错误的话，但是其中有一些逻辑是正确的呀， 直接回滚那不是麻烦了吗，又要重新开启一个事务，重新写一遍代码？？？😂 当然了，我们亲爱的MySQL设计者肯定不会这样做。 所以，在MySQL中，可以回到保存点时的状态而不用回滚事务。 MySQL中有savelpoint关键字来定义保存点。 语法如下: savepoint name; 1 比如定义一个名为point1的保存点: savepoint point1; 1 回滚到保存点的语法还不仅仅是直接rollback这么简单 下面时回滚到保存点的语法： rollback to savepoint 保存点名 1 比如: rollback to savepoint point1; 1 注意：保存点只在事务内使用 光说不练假把式，下面就是一个案例： #开启事务 START TRANSACTION; #修改数据 UPDATE user SET balance = balance - 300 WHERE name = '小蓝'; UPDATE user SET balance = balance + 300 WHERE name = '小红'; #设置保存点 SAVEPOINT my_point; #删除小蓝的数据 DELETE FROM user WHERE name = '小蓝'; #查表 SELECT * FROM user; #回滚到保存点时的状态 ROLLBACK TO SAVEPOINT my_point; #提交事务 COMMIT; #再次查表 SELECT * FROM user; 执行结果： 执行事务前 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2500 | | 3 | 小蓝 | 22 | 1800 | +----+------+-----+---------+ 执行事务后 +----+------+-----+---------+ | id | name | age | balance | +----+------+-----+---------+ | 1 | 小明 | 20 | 1000 | | 2 | 小红 | 21 | 2800 | | 3 | 小蓝 | 22 | 1500 | +----+------+-----+---------+ 可以看到小蓝的数据并没有被删除，因为回滚到了删除之前的状态。 总结： 在事务中设置保存点是个好习惯，可以让你的程序容错率更高。 特别是在进行删除数据这种危险的操作时，设置保存点是非常有必要的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"xss"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"sql"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xss\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":18.88,"words":5664},"filePathRelative":"other/mysql/2.md","localizedDate":"2023年12月11日","excerpt":"<hr>\\n<hr>\\n<hr>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code>使用事务\\n<span class=\\"token number\\">2.1</span>开始和提交事务\\n开始事务语句：<span class=\\"token keyword\\">begin</span> 或者 <span class=\\"token keyword\\">start</span> <span class=\\"token keyword\\">transaction</span>\\n提交事务语句：<span class=\\"token keyword\\">commit</span>\\n现有<span class=\\"token keyword\\">user</span>表:\\n\\nid          用户id\\nname\\t\\t用户名字\\nage\\t\\t\\t用户年龄\\nbalance\\t\\t用户余额\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">---------+-------------+------+-----+---------+----------------+</span>\\n<span class=\\"token operator\\">|</span> Field   <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">Type</span>        <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">Null</span> <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">Key</span> <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">Default</span> <span class=\\"token operator\\">|</span> Extra          <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">---------+-------------+------+-----+---------+----------------+</span>\\n<span class=\\"token operator\\">|</span> id      <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">int</span>         <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">NO</span>   <span class=\\"token operator\\">|</span> PRI <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">NULL</span>    <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">auto_increment</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span> name    <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">varchar</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> YES  <span class=\\"token operator\\">|</span>     <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">NULL</span>    <span class=\\"token operator\\">|</span>                <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span> age     <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">int</span>         <span class=\\"token operator\\">|</span> YES  <span class=\\"token operator\\">|</span>     <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">NULL</span>    <span class=\\"token operator\\">|</span>                <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">int</span>         <span class=\\"token operator\\">|</span> YES  <span class=\\"token operator\\">|</span>     <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">NULL</span>    <span class=\\"token operator\\">|</span>                <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">---------+-------------+------+-----+---------+----------------+</span>\\n\\n下面是数据:\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n现在模拟银行转账的情况:\\n将小明的账户余额减少<span class=\\"token number\\">500</span>块，将小红的余额增减<span class=\\"token number\\">500</span>块。\\n\\n<span class=\\"token keyword\\">START</span> <span class=\\"token keyword\\">TRANSACTION</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">-</span> <span class=\\"token number\\">500</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小明'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">+</span> <span class=\\"token number\\">500</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小红'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">COMMIT</span><span class=\\"token punctuation\\">;</span>\\n\\n事务执行后的结果:\\n\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n<span class=\\"token number\\">2.2</span>rollback回滚\\n使用<span class=\\"token keyword\\">rollback</span>关键字可以回到事务开始之前的状态。\\n如果你发现事务里逻辑有问题，可以回滚到事务之前的状态。\\n这可能比较抽象，看下面的例子，就会懂怎么用事务了。\\n\\n当前表数据:\\n\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n现将小蓝的余额扣除<span class=\\"token number\\">300</span>，小红的余额增加<span class=\\"token number\\">300</span>。\\n但中途发现只需要将小蓝的余额扣除<span class=\\"token number\\">200</span>就够了，\\n而且事务都执行了一半了，事务里的数据都改了，怎么办呢？\\n这时回滚<span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">rollback</span><span class=\\"token punctuation\\">)</span>就派上用场了。\\n\\n<span class=\\"token keyword\\">START</span> <span class=\\"token keyword\\">TRANSACTION</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#操作</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">-</span> <span class=\\"token number\\">300</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小蓝'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">+</span> <span class=\\"token number\\">300</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小红'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#查表</span>\\n<span class=\\"token keyword\\">SELECT</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">FROM</span> <span class=\\"token keyword\\">user</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#发现问题，回滚</span>\\n<span class=\\"token keyword\\">ROLLBACK</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#再次查表</span>\\n<span class=\\"token keyword\\">SELECT</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">FROM</span> <span class=\\"token keyword\\">user</span><span class=\\"token punctuation\\">;</span>\\n\\n结果:\\n\\n回滚之前\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span>  <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1500</span>    <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n回滚之后\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n\\n\\n在回滚之后，数据又恢复原样了，之后可以再开启事务进行操作。\\n\\n<span class=\\"token number\\">2.3</span>savepoint保存点\\n其实，如果在事务里发现了逻辑错误的话，但是其中有一些逻辑是正确的呀，\\n直接回滚那不是麻烦了吗，又要重新开启一个事务，重新写一遍代码？？？😂\\n当然了，我们亲爱的MySQL设计者肯定不会这样做。\\n\\n所以，在MySQL中，可以回到保存点时的状态而不用回滚事务。\\nMySQL中有savelpoint关键字来定义保存点。\\n语法如下:\\n\\n<span class=\\"token keyword\\">savepoint</span> name<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">1</span>\\n比如定义一个名为point1的保存点:\\n\\n<span class=\\"token keyword\\">savepoint</span> point1<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">1</span>\\n回滚到保存点的语法还不仅仅是直接<span class=\\"token keyword\\">rollback</span>这么简单\\n下面时回滚到保存点的语法：\\n\\n<span class=\\"token keyword\\">rollback</span> <span class=\\"token keyword\\">to</span> <span class=\\"token keyword\\">savepoint</span> 保存点名\\n<span class=\\"token number\\">1</span>\\n比如:\\n\\n<span class=\\"token keyword\\">rollback</span> <span class=\\"token keyword\\">to</span> <span class=\\"token keyword\\">savepoint</span> point1<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token number\\">1</span>\\n注意：保存点只在事务内使用\\n\\n光说不练假把式，下面就是一个案例：\\n\\n<span class=\\"token comment\\">#开启事务</span>\\n<span class=\\"token keyword\\">START</span> <span class=\\"token keyword\\">TRANSACTION</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#修改数据</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">-</span> <span class=\\"token number\\">300</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小蓝'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">UPDATE</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">SET</span> balance <span class=\\"token operator\\">=</span> balance <span class=\\"token operator\\">+</span> <span class=\\"token number\\">300</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小红'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#设置保存点</span>\\n<span class=\\"token keyword\\">SAVEPOINT</span> my_point<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#删除小蓝的数据</span>\\n<span class=\\"token keyword\\">DELETE</span> <span class=\\"token keyword\\">FROM</span> <span class=\\"token keyword\\">user</span> <span class=\\"token keyword\\">WHERE</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'小蓝'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#查表</span>\\n<span class=\\"token keyword\\">SELECT</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">FROM</span> <span class=\\"token keyword\\">user</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#回滚到保存点时的状态</span>\\n<span class=\\"token keyword\\">ROLLBACK</span> <span class=\\"token keyword\\">TO</span> <span class=\\"token keyword\\">SAVEPOINT</span> my_point<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">#提交事务</span>\\n<span class=\\"token keyword\\">COMMIT</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">#再次查表</span>\\n<span class=\\"token keyword\\">SELECT</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">FROM</span> <span class=\\"token keyword\\">user</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n执行结果：\\n\\n执行事务前\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n执行事务后\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span> id <span class=\\"token operator\\">|</span> name <span class=\\"token operator\\">|</span> age <span class=\\"token operator\\">|</span> balance <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">1</span> <span class=\\"token operator\\">|</span> 小明 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">20</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1000</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">2</span> <span class=\\"token operator\\">|</span> 小红 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">21</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">2800</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">|</span>  <span class=\\"token number\\">3</span> <span class=\\"token operator\\">|</span> 小蓝 <span class=\\"token operator\\">|</span>  <span class=\\"token number\\">22</span> <span class=\\"token operator\\">|</span>    <span class=\\"token number\\">1500</span> <span class=\\"token operator\\">|</span>\\n<span class=\\"token operator\\">+</span><span class=\\"token comment\\">----+------+-----+---------+</span>\\n\\n\\n\\n可以看到小蓝的数据并没有被删除，因为回滚到了删除之前的状态。\\n\\n总结：\\n在事务中设置保存点是个好习惯，可以让你的程序容错率更高。\\n特别是在进行删除数据这种危险的操作时，设置保存点是非常有必要的。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
