const e=JSON.parse('{"key":"v-1b2ac639","path":"/other/mybatis/4.html","title":"wrapper","lang":"zh-CN","frontmatter":{"title":"wrapper","icon":"page","order":21,"author":"xss","date":"2023-12-11T00:00:00.000Z","category":["wrapper","使用"],"tag":["wrapper","操作流"],"footer":"这是测试显示的页脚","copyright":"无版权","description":"前言： 通过调用构造方法返回一个LambdaQueryWrapper对象，在对象上使用链式编程 、Lambda表达式和链式调用的方式，灵活地实现了SQL查询条件构造和简化了SQL查询代码的编写。 一个流程看懂 创建一个LambdaQueryWrapper对象 -&gt; 使用Lambda表达式或方法引用构造查询条件 -&gt; 调用MyBatis-Plus提供的方法获取查询结果。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/other/mybatis/4.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"wrapper"}],["meta",{"property":"og:description","content":"前言： 通过调用构造方法返回一个LambdaQueryWrapper对象，在对象上使用链式编程 、Lambda表达式和链式调用的方式，灵活地实现了SQL查询条件构造和简化了SQL查询代码的编写。 一个流程看懂 创建一个LambdaQueryWrapper对象 -&gt; 使用Lambda表达式或方法引用构造查询条件 -&gt; 调用MyBatis-Plus提供的方法获取查询结果。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"xss"}],["meta",{"property":"article:tag","content":"wrapper"}],["meta",{"property":"article:tag","content":"操作流"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"wrapper\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xss\\"}]}"]]},"headers":[{"level":2,"title":"前言：","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"一个流程看懂","slug":"一个流程看懂","link":"#一个流程看懂","children":[]},{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":2,"title":"Q&A","slug":"q-a","link":"#q-a","children":[]},{"level":2,"title":"1、【大小比较： ( =, <>, >, >=, <, <= )】","slug":"_1、【大小比较-】","link":"#_1、【大小比较-】","children":[]},{"level":2,"title":"2、【范围：（between、not between、in、not in）】","slug":"_2、【范围-between、not-between、in、not-in-】","link":"#_2、【范围-between、not-between、in、not-in-】","children":[]},{"level":2,"title":"3、【模糊匹配：（like）】","slug":"_3、【模糊匹配-like-】","link":"#_3、【模糊匹配-like-】","children":[]},{"level":2,"title":"4、【空值比较：（isNull、isNotNull）】","slug":"_4、【空值比较-isnull、isnotnull-】","link":"#_4、【空值比较-isnull、isnotnull-】","children":[]},{"level":2,"title":"5、【分组、排序：（group、having、order）】","slug":"_5、【分组、排序-group、having、order-】","link":"#_5、【分组、排序-group、having、order-】","children":[]},{"level":2,"title":"6、【拼接、嵌套 sql：（or、and、nested、apply）】","slug":"_6、【拼接、嵌套-sql-or、and、nested、apply-】","link":"#_6、【拼接、嵌套-sql-or、and、nested、apply-】","children":[]},{"level":2,"title":"7、【QueryWrapper 条件：】","slug":"_7、【querywrapper-条件-】","link":"#_7、【querywrapper-条件-】","children":[]},{"level":2,"title":"8、【UpdateWrapper 条件：】","slug":"_8、【updatewrapper-条件-】","link":"#_8、【updatewrapper-条件-】","children":[]},{"level":2,"title":"9、 LambdaQueryWrapper使用其实更为方便；","slug":"_9、-lambdaquerywrapper使用其实更为方便","link":"#_9、-lambdaquerywrapper使用其实更为方便","children":[]},{"level":2,"title":"10，多表查询如何配置使用","slug":"_10-多表查询如何配置使用","link":"#_10-多表查询如何配置使用","children":[]},{"level":2,"title":"11.pom依赖","slug":"_11-pom依赖","link":"#_11-pom依赖","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":10.64,"words":3193},"filePathRelative":"other/mybatis/4.md","localizedDate":"2023年12月11日","excerpt":"<h2> 前言：</h2>\\n<hr>\\n<p>通过<strong>调用构造方法</strong>返回一个LambdaQueryWrapper对象，在对象上使用<a href=\\"https://www.cnblogs.com/salt-baked-universe/articles/17330628.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链式编程</a>\\n、Lambda表达式和链式调用的方式，灵活地<strong>实现了SQL查询条件构造</strong>和简化了SQL查询代码的编写。</p>\\n<h2> 一个流程看懂</h2>\\n<p><strong>创建</strong>一个LambdaQueryWrapper对象 -&gt; 使用Lambda表达式或方法引用<strong>构造</strong>查询条件 -&gt; <strong>调用</strong>MyBatis-Plus提供的方法获取查询结果。</p>","autoDesc":true}');export{e as data};
