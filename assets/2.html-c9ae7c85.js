const t=JSON.parse('{"key":"v-6908c18a","path":"/other/demo/2.html","title":"JPA and SWAGGER","lang":"zh-CN","frontmatter":{"title":"JPA and SWAGGER","icon":"page","order":12,"author":"xss","date":"2023-12-11T00:00:00.000Z","category":["学习文档"],"tag":["文档"],"footer":"这是测试显示的页脚","copyright":"无版权","description":"SpringBoot其他框架 通过了解其他的SpringBoot框架，我们就可以在我们自己的Web服务器上实现更多更高级的功能。 邮件发送：Mail 我们在注册很多的网站时，都会遇到邮件或是手机号验证，也就是通过你的邮箱或是手机短信去接受网站发给你的注册验证信息，填写验证码之后，就可以完成注册了，同时，网站也会绑定你的手机号或是邮箱。 那么，像这样的功能，我们如何实现呢？SpringBoot已经给我们提供了封装好的邮件模块使用： &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt; &lt;/dependency&gt;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/other/demo/2.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"JPA and SWAGGER"}],["meta",{"property":"og:description","content":"SpringBoot其他框架 通过了解其他的SpringBoot框架，我们就可以在我们自己的Web服务器上实现更多更高级的功能。 邮件发送：Mail 我们在注册很多的网站时，都会遇到邮件或是手机号验证，也就是通过你的邮箱或是手机短信去接受网站发给你的注册验证信息，填写验证码之后，就可以完成注册了，同时，网站也会绑定你的手机号或是邮箱。 那么，像这样的功能，我们如何实现呢？SpringBoot已经给我们提供了封装好的邮件模块使用： &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt; &lt;/dependency&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"xss"}],["meta",{"property":"article:tag","content":"文档"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JPA and SWAGGER\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xss\\"}]}"]]},"headers":[{"level":2,"title":"邮件发送：Mail","slug":"邮件发送-mail","link":"#邮件发送-mail","children":[{"level":3,"title":"邮件发送","slug":"邮件发送","link":"#邮件发送","children":[]},{"level":3,"title":"邮件注册","slug":"邮件注册","link":"#邮件注册","children":[]}]},{"level":2,"title":"持久层框架：JPA","slug":"持久层框架-jpa","link":"#持久层框架-jpa","children":[{"level":3,"title":"认识SpringDataJPA","slug":"认识springdatajpa","link":"#认识springdatajpa","children":[]},{"level":3,"title":"使用JPA","slug":"使用jpa","link":"#使用jpa","children":[]},{"level":3,"title":"方法名称拼接自定义SQL","slug":"方法名称拼接自定义sql","link":"#方法名称拼接自定义sql","children":[]},{"level":3,"title":"关联查询","slug":"关联查询","link":"#关联查询","children":[]},{"level":3,"title":"JPQL自定义SQL语句","slug":"jpql自定义sql语句","link":"#jpql自定义sql语句","children":[]}]},{"level":2,"title":"Extra. 前后端分离跨域处理","slug":"extra-前后端分离跨域处理","link":"#extra-前后端分离跨域处理","children":[]},{"level":2,"title":"接口管理：Swagger","slug":"接口管理-swagger","link":"#接口管理-swagger","children":[{"level":3,"title":"走进Swagger","slug":"走进swagger","link":"#走进swagger","children":[]},{"level":3,"title":"接口信息配置","slug":"接口信息配置","link":"#接口信息配置","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":30.05,"words":9015},"filePathRelative":"other/demo/2.md","localizedDate":"2023年12月11日","excerpt":"<h1> SpringBoot其他框架</h1>\\n<p>通过了解其他的SpringBoot框架，我们就可以在我们自己的Web服务器上实现更多更高级的功能。</p>\\n<h2> 邮件发送：Mail</h2>\\n<p>我们在注册很多的网站时，都会遇到邮件或是手机号验证，也就是通过你的邮箱或是手机短信去接受网站发给你的注册验证信息，填写验证码之后，就可以完成注册了，同时，网站也会绑定你的手机号或是邮箱。</p>\\n<p>那么，像这样的功能，我们如何实现呢？SpringBoot已经给我们提供了封装好的邮件模块使用：</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>org.springframework.boot<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>spring-boot-starter-mail<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
